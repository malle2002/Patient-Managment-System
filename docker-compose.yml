version: "3.8"
services:
  patient-service:
    build:
      context: patient-service
      dockerfile: Dockerfile
    image: malle2002/patient-managment-system-patient-service:latest
    container_name: patient_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://patientdb:5432/patientdb
      SPRING_DATASOURCE_USER: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INT_MODE: always
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9001
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "9002:9002"
    networks:
      - patient_system_network

  auth-service:
    build:
      context: auth-service
      dockerfile: Dockerfile
    image: malle2002/patient-managment-system-auth-service:latest
    container_name: auth_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/db
      SPRING_DATASOURCE_USER: admin_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INT_MODE: always
      JWT_SECRET: 151284806f3ffe49bd28e87ffdafd71a85860f13b9d192359a381cb4ad94f8d1c071f6bb8e34df236e76c4f5455e6092b8d71bbbfb6e5737d5a3ba2d0c969541
    networks:
      - patient_system_network

  analytics-service:
    build:
      context: analytics-service
      dockerfile: Dockerfile
    image: malle2002/patient-managment-system-analytics-service:latest
    container_name: analytics_service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "21200:21200"
    networks:
      - patient_system_network

  billing-service:
    build:
      context: billing-service
      dockerfile: Dockerfile
    image: malle2002/patient-managment-system-billing-service:latest
    container_name: billing-service
    ports:
      - "21100:21100"
      - "9001:9001"
    networks:
      - patient_system_network

  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: malle2002/patient-managment-system-api-gateway:latest
    container_name: api-gateway
    environment:
      AUTH_SERVICE_URL: http://auth-service:21300
    ports:
      - "20000:20000"
    networks:
      - patient_system_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    networks:
      - patient_system_network

  patientdb:
    image: postgres:latest
    container_name: patient_db
    ports:
      - "5440:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: patientdb
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - patient_system_network

  auth-service-db:
    image: postgres:latest
    container_name: auth-service-db
    ports:
      - "5441:5432"
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - authdb_data:/var/lib/postgresql/data
    networks:
      - patient_system_network

volumes:
  db_data:
  authdb_data:

networks:
  patient_system_network: